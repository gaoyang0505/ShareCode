/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Residence;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import Business.WorkQueue.ResidenceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cassiopeia
 */
public class ResidenceWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private String welcome;
    private Organization organization;

    /**
     * Creates new form ResidenceWorkArea
     */
    public ResidenceWorkArea(JPanel upc, Enterprise e, Organization o, UserAccount ua) {
        initComponents();
        userAccount = ua;
        userProcessContainer = upc;
        enterprise = e;
        organization = o;
        populateDoneConnection();
//        populatePersonsTable(organization.getUserAccountDirectory().getUserAccountList());
    }

    public void populateDoneConnection() {
        DefaultTableModel model = (DefaultTableModel) jDoneConnectionTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request.getReceiver().equals(userAccount) && request.getMessageType().equals("Connection") && ((ResidenceWorkRequest) request).getConnectionResult().equals("Connect")) {
                Object row[] = new Object[2];
                row[0] = request.getSender();
                row[1] = request.getSender().getEmployee().getNameEmployee();
                ((DefaultTableModel) jDoneConnectionTable.getModel()).addRow(row);
            }
            if (!request.getReceiver().equals(userAccount) && request.getMessageType().equals("Connection") && ((ResidenceWorkRequest) request).getConnectionResult().equals("Connect")) {
                Object row[] = new Object[2];
                row[0] = request.getReceiver();
                row[1] = request.getReceiver().getEmployee().getNameEmployee();
                ((DefaultTableModel) jDoneConnectionTable.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jConnectionBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSearchBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jDoneConnectionTable = new javax.swing.JTable();
        jEmergenButton = new javax.swing.JButton();

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/message-already-read-icon.png"))); // NOI18N
        jButton1.setText("Message Box");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jConnectionBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jConnectionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-icon.png"))); // NOI18N
        jConnectionBtn.setText("Connection Request");
        jConnectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConnectionBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("User Name You Want to Connect");

        jSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Zoom-icon.png"))); // NOI18N
        jSearchBtn.setText("Search");
        jSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jConnectionBtn)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(jSearchBtn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jConnectionBtn)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Create Connection", jPanel1);

        jDoneConnectionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Name"
            }
        ));
        jScrollPane2.setViewportView(jDoneConnectionTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("My Connection", jPanel2);

        jEmergenButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jEmergenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emergency-icon.png"))); // NOI18N
        jEmergenButton.setText("Emergency");
        jEmergenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEmergenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jEmergenButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEmergenButton)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ResMessageBox manageEnterpriseJPanel = new ResMessageBox(userProcessContainer, userAccount, enterprise);
        userProcessContainer.add("ResMessageBox", manageEnterpriseJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jConnectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConnectionBtnActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow > -1) {
            String message = userAccount + " want to Connet with you";

            ResidenceWorkRequest request = new ResidenceWorkRequest();
            request.setMessage(message);
            request.setMessageType("Connection");
            
       
            request.setSender(userAccount);
            request.setConnectionResult("Processing");
            request.setStatus("Sent");
            UserAccount messageReceiver = new UserAccount();
            for (UserAccount us:organization.getUserAccountDirectory().getUserAccountList()){
                if(us.getUsername().equals(jTable1.getValueAt(selectedRow, 0)))
                    messageReceiver = us;
            }
            request.setReceiver(messageReceiver);
            messageReceiver.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Sent Successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Select One!");
        }

    }//GEN-LAST:event_jConnectionBtnActionPerformed

    private void jSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchBtnActionPerformed
        String key  = jTextField1.getText();
        if(key.length() == 0){
            return;
        }       
        
        ArrayList<UserAccount> searchUserAccount;
        searchUserAccount = organization.getUserAccountDirectory().serchPerson(key);
        populatePersonsTable(searchUserAccount);
    }//GEN-LAST:event_jSearchBtnActionPerformed

    private void populatePersonsTable(ArrayList<UserAccount> personsList) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        if(personsList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No Person's found. Please add Person's", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        for (UserAccount person : personsList) {
            Object[] row = new Object[2];
            row[0] = person.getUsername();
            row[1]= person.getEmployee().getNameEmployee();
            
            model.addRow(row);
        }
    }
    private void jEmergenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEmergenButtonActionPerformed
        String message = userAccount + " has an Emergency!";
        UserAccount messageReceiver = new UserAccount();
        ResidenceWorkRequest requestJ = new ResidenceWorkRequest();
        requestJ.setMessage(message);
        requestJ.setMessageType("Emergency");
        requestJ.setSender(userAccount);
        requestJ.setStatus("Sent");

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request.getReceiver().equals(userAccount) && request.getMessageType().equals("Connection") && ((ResidenceWorkRequest) request).getConnectionResult().equals("Connect")) {
                messageReceiver = request.getSender();
                requestJ.setReceiver(messageReceiver);
                messageReceiver.getWorkQueue().getWorkRequestList().add(requestJ);
            }
            if (!request.getReceiver().equals(userAccount) && request.getMessageType().equals("Connection") && ((ResidenceWorkRequest) request).getConnectionResult().equals("Connect")) {
                messageReceiver = request.getReceiver();
                requestJ.setReceiver(messageReceiver);
                messageReceiver.getWorkQueue().getWorkRequestList().add(requestJ);
            }
        }

        userAccount.getWorkQueue().getWorkRequestList().add(requestJ);
        JOptionPane.showMessageDialog(null, "Sent Successfully!");
    }//GEN-LAST:event_jEmergenButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jConnectionBtn;
    private javax.swing.JTable jDoneConnectionTable;
    private javax.swing.JButton jEmergenButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jSearchBtn;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
